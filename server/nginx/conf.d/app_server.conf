upstream app_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response

  # for UNIX domain socket setups
  server web:5000 fail_timeout=0;

  # for a TCP configuration
  # server 192.168.0.7:8000 fail_timeout=0;
}

# Define the parameters for a specific virtual host/server
server {
  # Define the directory where the contents being requested are stored
  # root /usr/src/app/project/;

  # Define the default page that will be served If no page was requested
  # (ie. if www.kennedyfamilyrecipes.com is requested)
  # index index.html;

  # Define the server name, IP address, and/or port of the server
  listen 80;
  # server_name xxx.yyy.zzz.aaa

  # Define the specified charset to the “Content-Type” response header field
  charset utf-8;

  # Define the maximum file size on file uploads
  client_max_body_size 4G;

  location / {
    # checks for static file, if not found proxy to app
    try_files $uri @proxy_to_app;
  }

  # Configure NGINX to deliver static content from the specified folder
  # location /static {
  #     alias /usr/src/app/project/static;
  # }
 
  # Configure NGINX to reverse proxy HTTP requests to the upstream server (Gunicorn (WSGI server))
  location @proxy_to_app {
    # Define the location of the proxy server to send the request to
    proxy_pass http://app_server;
 
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;

    # Redefine the header fields that NGINX sends to the upstream server
    
    # enable this if and only if you use HTTPS
    # proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}